package wfjv99.utility;

import java.util.Collections;
import java.util.HashMap;
import java.util.Map;

/**
 * Manual mappings of Java unsigned 8-bit ints to ASCII strings of 1s and 0s,
 * and visa versa.
 */

public class ASCIIBitstring {

    public static final Map<String, Integer> STRING_TO_BYTE;
    static {
        Map<String, Integer> map = new HashMap<String, Integer>(256);
        map.put("00000000", 0x0);
        map.put("00000001", 0x1);
        map.put("00000010", 0x2);
        map.put("00000011", 0x3);
        map.put("00000100", 0x4);
        map.put("00000101", 0x5);
        map.put("00000110", 0x6);
        map.put("00000111", 0x7);
        map.put("00001000", 0x8);
        map.put("00001001", 0x9);
        map.put("00001010", 0xa);
        map.put("00001011", 0xb);
        map.put("00001100", 0xc);
        map.put("00001101", 0xd);
        map.put("00001110", 0xe);
        map.put("00001111", 0xf);
        map.put("00010000", 0x10);
        map.put("00010001", 0x11);
        map.put("00010010", 0x12);
        map.put("00010011", 0x13);
        map.put("00010100", 0x14);
        map.put("00010101", 0x15);
        map.put("00010110", 0x16);
        map.put("00010111", 0x17);
        map.put("00011000", 0x18);
        map.put("00011001", 0x19);
        map.put("00011010", 0x1a);
        map.put("00011011", 0x1b);
        map.put("00011100", 0x1c);
        map.put("00011101", 0x1d);
        map.put("00011110", 0x1e);
        map.put("00011111", 0x1f);
        map.put("00100000", 0x20);
        map.put("00100001", 0x21);
        map.put("00100010", 0x22);
        map.put("00100011", 0x23);
        map.put("00100100", 0x24);
        map.put("00100101", 0x25);
        map.put("00100110", 0x26);
        map.put("00100111", 0x27);
        map.put("00101000", 0x28);
        map.put("00101001", 0x29);
        map.put("00101010", 0x2a);
        map.put("00101011", 0x2b);
        map.put("00101100", 0x2c);
        map.put("00101101", 0x2d);
        map.put("00101110", 0x2e);
        map.put("00101111", 0x2f);
        map.put("00110000", 0x30);
        map.put("00110001", 0x31);
        map.put("00110010", 0x32);
        map.put("00110011", 0x33);
        map.put("00110100", 0x34);
        map.put("00110101", 0x35);
        map.put("00110110", 0x36);
        map.put("00110111", 0x37);
        map.put("00111000", 0x38);
        map.put("00111001", 0x39);
        map.put("00111010", 0x3a);
        map.put("00111011", 0x3b);
        map.put("00111100", 0x3c);
        map.put("00111101", 0x3d);
        map.put("00111110", 0x3e);
        map.put("00111111", 0x3f);
        map.put("01000000", 0x40);
        map.put("01000001", 0x41);
        map.put("01000010", 0x42);
        map.put("01000011", 0x43);
        map.put("01000100", 0x44);
        map.put("01000101", 0x45);
        map.put("01000110", 0x46);
        map.put("01000111", 0x47);
        map.put("01001000", 0x48);
        map.put("01001001", 0x49);
        map.put("01001010", 0x4a);
        map.put("01001011", 0x4b);
        map.put("01001100", 0x4c);
        map.put("01001101", 0x4d);
        map.put("01001110", 0x4e);
        map.put("01001111", 0x4f);
        map.put("01010000", 0x50);
        map.put("01010001", 0x51);
        map.put("01010010", 0x52);
        map.put("01010011", 0x53);
        map.put("01010100", 0x54);
        map.put("01010101", 0x55);
        map.put("01010110", 0x56);
        map.put("01010111", 0x57);
        map.put("01011000", 0x58);
        map.put("01011001", 0x59);
        map.put("01011010", 0x5a);
        map.put("01011011", 0x5b);
        map.put("01011100", 0x5c);
        map.put("01011101", 0x5d);
        map.put("01011110", 0x5e);
        map.put("01011111", 0x5f);
        map.put("01100000", 0x60);
        map.put("01100001", 0x61);
        map.put("01100010", 0x62);
        map.put("01100011", 0x63);
        map.put("01100100", 0x64);
        map.put("01100101", 0x65);
        map.put("01100110", 0x66);
        map.put("01100111", 0x67);
        map.put("01101000", 0x68);
        map.put("01101001", 0x69);
        map.put("01101010", 0x6a);
        map.put("01101011", 0x6b);
        map.put("01101100", 0x6c);
        map.put("01101101", 0x6d);
        map.put("01101110", 0x6e);
        map.put("01101111", 0x6f);
        map.put("01110000", 0x70);
        map.put("01110001", 0x71);
        map.put("01110010", 0x72);
        map.put("01110011", 0x73);
        map.put("01110100", 0x74);
        map.put("01110101", 0x75);
        map.put("01110110", 0x76);
        map.put("01110111", 0x77);
        map.put("01111000", 0x78);
        map.put("01111001", 0x79);
        map.put("01111010", 0x7a);
        map.put("01111011", 0x7b);
        map.put("01111100", 0x7c);
        map.put("01111101", 0x7d);
        map.put("01111110", 0x7e);
        map.put("01111111", 0x7f);
        map.put("10000000", 0x80);
        map.put("10000001", 0x81);
        map.put("10000010", 0x82);
        map.put("10000011", 0x83);
        map.put("10000100", 0x84);
        map.put("10000101", 0x85);
        map.put("10000110", 0x86);
        map.put("10000111", 0x87);
        map.put("10001000", 0x88);
        map.put("10001001", 0x89);
        map.put("10001010", 0x8a);
        map.put("10001011", 0x8b);
        map.put("10001100", 0x8c);
        map.put("10001101", 0x8d);
        map.put("10001110", 0x8e);
        map.put("10001111", 0x8f);
        map.put("10010000", 0x90);
        map.put("10010001", 0x91);
        map.put("10010010", 0x92);
        map.put("10010011", 0x93);
        map.put("10010100", 0x94);
        map.put("10010101", 0x95);
        map.put("10010110", 0x96);
        map.put("10010111", 0x97);
        map.put("10011000", 0x98);
        map.put("10011001", 0x99);
        map.put("10011010", 0x9a);
        map.put("10011011", 0x9b);
        map.put("10011100", 0x9c);
        map.put("10011101", 0x9d);
        map.put("10011110", 0x9e);
        map.put("10011111", 0x9f);
        map.put("10100000", 0xa0);
        map.put("10100001", 0xa1);
        map.put("10100010", 0xa2);
        map.put("10100011", 0xa3);
        map.put("10100100", 0xa4);
        map.put("10100101", 0xa5);
        map.put("10100110", 0xa6);
        map.put("10100111", 0xa7);
        map.put("10101000", 0xa8);
        map.put("10101001", 0xa9);
        map.put("10101010", 0xaa);
        map.put("10101011", 0xab);
        map.put("10101100", 0xac);
        map.put("10101101", 0xad);
        map.put("10101110", 0xae);
        map.put("10101111", 0xaf);
        map.put("10110000", 0xb0);
        map.put("10110001", 0xb1);
        map.put("10110010", 0xb2);
        map.put("10110011", 0xb3);
        map.put("10110100", 0xb4);
        map.put("10110101", 0xb5);
        map.put("10110110", 0xb6);
        map.put("10110111", 0xb7);
        map.put("10111000", 0xb8);
        map.put("10111001", 0xb9);
        map.put("10111010", 0xba);
        map.put("10111011", 0xbb);
        map.put("10111100", 0xbc);
        map.put("10111101", 0xbd);
        map.put("10111110", 0xbe);
        map.put("10111111", 0xbf);
        map.put("11000000", 0xc0);
        map.put("11000001", 0xc1);
        map.put("11000010", 0xc2);
        map.put("11000011", 0xc3);
        map.put("11000100", 0xc4);
        map.put("11000101", 0xc5);
        map.put("11000110", 0xc6);
        map.put("11000111", 0xc7);
        map.put("11001000", 0xc8);
        map.put("11001001", 0xc9);
        map.put("11001010", 0xca);
        map.put("11001011", 0xcb);
        map.put("11001100", 0xcc);
        map.put("11001101", 0xcd);
        map.put("11001110", 0xce);
        map.put("11001111", 0xcf);
        map.put("11010000", 0xd0);
        map.put("11010001", 0xd1);
        map.put("11010010", 0xd2);
        map.put("11010011", 0xd3);
        map.put("11010100", 0xd4);
        map.put("11010101", 0xd5);
        map.put("11010110", 0xd6);
        map.put("11010111", 0xd7);
        map.put("11011000", 0xd8);
        map.put("11011001", 0xd9);
        map.put("11011010", 0xda);
        map.put("11011011", 0xdb);
        map.put("11011100", 0xdc);
        map.put("11011101", 0xdd);
        map.put("11011110", 0xde);
        map.put("11011111", 0xdf);
        map.put("11100000", 0xe0);
        map.put("11100001", 0xe1);
        map.put("11100010", 0xe2);
        map.put("11100011", 0xe3);
        map.put("11100100", 0xe4);
        map.put("11100101", 0xe5);
        map.put("11100110", 0xe6);
        map.put("11100111", 0xe7);
        map.put("11101000", 0xe8);
        map.put("11101001", 0xe9);
        map.put("11101010", 0xea);
        map.put("11101011", 0xeb);
        map.put("11101100", 0xec);
        map.put("11101101", 0xed);
        map.put("11101110", 0xee);
        map.put("11101111", 0xef);
        map.put("11110000", 0xf0);
        map.put("11110001", 0xf1);
        map.put("11110010", 0xf2);
        map.put("11110011", 0xf3);
        map.put("11110100", 0xf4);
        map.put("11110101", 0xf5);
        map.put("11110110", 0xf6);
        map.put("11110111", 0xf7);
        map.put("11111000", 0xf8);
        map.put("11111001", 0xf9);
        map.put("11111010", 0xfa);
        map.put("11111011", 0xfb);
        map.put("11111100", 0xfc);
        map.put("11111101", 0xfd);
        map.put("11111110", 0xfe);
        map.put("11111111", 0xff);
        STRING_TO_BYTE = Collections.unmodifiableMap(map);
    }

    public static final Map<Integer, String> BYTE_TO_STRING;
    static {
        Map<Integer, String> map = new HashMap<Integer, String>(256);
        map.put(0x0, "00000000");
        map.put(0x1, "00000001");
        map.put(0x2, "00000010");
        map.put(0x3, "00000011");
        map.put(0x4, "00000100");
        map.put(0x5, "00000101");
        map.put(0x6, "00000110");
        map.put(0x7, "00000111");
        map.put(0x8, "00001000");
        map.put(0x9, "00001001");
        map.put(0xa, "00001010");
        map.put(0xb, "00001011");
        map.put(0xc, "00001100");
        map.put(0xd, "00001101");
        map.put(0xe, "00001110");
        map.put(0xf, "00001111");
        map.put(0x10, "00010000");
        map.put(0x11, "00010001");
        map.put(0x12, "00010010");
        map.put(0x13, "00010011");
        map.put(0x14, "00010100");
        map.put(0x15, "00010101");
        map.put(0x16, "00010110");
        map.put(0x17, "00010111");
        map.put(0x18, "00011000");
        map.put(0x19, "00011001");
        map.put(0x1a, "00011010");
        map.put(0x1b, "00011011");
        map.put(0x1c, "00011100");
        map.put(0x1d, "00011101");
        map.put(0x1e, "00011110");
        map.put(0x1f, "00011111");
        map.put(0x20, "00100000");
        map.put(0x21, "00100001");
        map.put(0x22, "00100010");
        map.put(0x23, "00100011");
        map.put(0x24, "00100100");
        map.put(0x25, "00100101");
        map.put(0x26, "00100110");
        map.put(0x27, "00100111");
        map.put(0x28, "00101000");
        map.put(0x29, "00101001");
        map.put(0x2a, "00101010");
        map.put(0x2b, "00101011");
        map.put(0x2c, "00101100");
        map.put(0x2d, "00101101");
        map.put(0x2e, "00101110");
        map.put(0x2f, "00101111");
        map.put(0x30, "00110000");
        map.put(0x31, "00110001");
        map.put(0x32, "00110010");
        map.put(0x33, "00110011");
        map.put(0x34, "00110100");
        map.put(0x35, "00110101");
        map.put(0x36, "00110110");
        map.put(0x37, "00110111");
        map.put(0x38, "00111000");
        map.put(0x39, "00111001");
        map.put(0x3a, "00111010");
        map.put(0x3b, "00111011");
        map.put(0x3c, "00111100");
        map.put(0x3d, "00111101");
        map.put(0x3e, "00111110");
        map.put(0x3f, "00111111");
        map.put(0x40, "01000000");
        map.put(0x41, "01000001");
        map.put(0x42, "01000010");
        map.put(0x43, "01000011");
        map.put(0x44, "01000100");
        map.put(0x45, "01000101");
        map.put(0x46, "01000110");
        map.put(0x47, "01000111");
        map.put(0x48, "01001000");
        map.put(0x49, "01001001");
        map.put(0x4a, "01001010");
        map.put(0x4b, "01001011");
        map.put(0x4c, "01001100");
        map.put(0x4d, "01001101");
        map.put(0x4e, "01001110");
        map.put(0x4f, "01001111");
        map.put(0x50, "01010000");
        map.put(0x51, "01010001");
        map.put(0x52, "01010010");
        map.put(0x53, "01010011");
        map.put(0x54, "01010100");
        map.put(0x55, "01010101");
        map.put(0x56, "01010110");
        map.put(0x57, "01010111");
        map.put(0x58, "01011000");
        map.put(0x59, "01011001");
        map.put(0x5a, "01011010");
        map.put(0x5b, "01011011");
        map.put(0x5c, "01011100");
        map.put(0x5d, "01011101");
        map.put(0x5e, "01011110");
        map.put(0x5f, "01011111");
        map.put(0x60, "01100000");
        map.put(0x61, "01100001");
        map.put(0x62, "01100010");
        map.put(0x63, "01100011");
        map.put(0x64, "01100100");
        map.put(0x65, "01100101");
        map.put(0x66, "01100110");
        map.put(0x67, "01100111");
        map.put(0x68, "01101000");
        map.put(0x69, "01101001");
        map.put(0x6a, "01101010");
        map.put(0x6b, "01101011");
        map.put(0x6c, "01101100");
        map.put(0x6d, "01101101");
        map.put(0x6e, "01101110");
        map.put(0x6f, "01101111");
        map.put(0x70, "01110000");
        map.put(0x71, "01110001");
        map.put(0x72, "01110010");
        map.put(0x73, "01110011");
        map.put(0x74, "01110100");
        map.put(0x75, "01110101");
        map.put(0x76, "01110110");
        map.put(0x77, "01110111");
        map.put(0x78, "01111000");
        map.put(0x79, "01111001");
        map.put(0x7a, "01111010");
        map.put(0x7b, "01111011");
        map.put(0x7c, "01111100");
        map.put(0x7d, "01111101");
        map.put(0x7e, "01111110");
        map.put(0x7f, "01111111");
        map.put(0x80, "10000000");
        map.put(0x81, "10000001");
        map.put(0x82, "10000010");
        map.put(0x83, "10000011");
        map.put(0x84, "10000100");
        map.put(0x85, "10000101");
        map.put(0x86, "10000110");
        map.put(0x87, "10000111");
        map.put(0x88, "10001000");
        map.put(0x89, "10001001");
        map.put(0x8a, "10001010");
        map.put(0x8b, "10001011");
        map.put(0x8c, "10001100");
        map.put(0x8d, "10001101");
        map.put(0x8e, "10001110");
        map.put(0x8f, "10001111");
        map.put(0x90, "10010000");
        map.put(0x91, "10010001");
        map.put(0x92, "10010010");
        map.put(0x93, "10010011");
        map.put(0x94, "10010100");
        map.put(0x95, "10010101");
        map.put(0x96, "10010110");
        map.put(0x97, "10010111");
        map.put(0x98, "10011000");
        map.put(0x99, "10011001");
        map.put(0x9a, "10011010");
        map.put(0x9b, "10011011");
        map.put(0x9c, "10011100");
        map.put(0x9d, "10011101");
        map.put(0x9e, "10011110");
        map.put(0x9f, "10011111");
        map.put(0xa0, "10100000");
        map.put(0xa1, "10100001");
        map.put(0xa2, "10100010");
        map.put(0xa3, "10100011");
        map.put(0xa4, "10100100");
        map.put(0xa5, "10100101");
        map.put(0xa6, "10100110");
        map.put(0xa7, "10100111");
        map.put(0xa8, "10101000");
        map.put(0xa9, "10101001");
        map.put(0xaa, "10101010");
        map.put(0xab, "10101011");
        map.put(0xac, "10101100");
        map.put(0xad, "10101101");
        map.put(0xae, "10101110");
        map.put(0xaf, "10101111");
        map.put(0xb0, "10110000");
        map.put(0xb1, "10110001");
        map.put(0xb2, "10110010");
        map.put(0xb3, "10110011");
        map.put(0xb4, "10110100");
        map.put(0xb5, "10110101");
        map.put(0xb6, "10110110");
        map.put(0xb7, "10110111");
        map.put(0xb8, "10111000");
        map.put(0xb9, "10111001");
        map.put(0xba, "10111010");
        map.put(0xbb, "10111011");
        map.put(0xbc, "10111100");
        map.put(0xbd, "10111101");
        map.put(0xbe, "10111110");
        map.put(0xbf, "10111111");
        map.put(0xc0, "11000000");
        map.put(0xc1, "11000001");
        map.put(0xc2, "11000010");
        map.put(0xc3, "11000011");
        map.put(0xc4, "11000100");
        map.put(0xc5, "11000101");
        map.put(0xc6, "11000110");
        map.put(0xc7, "11000111");
        map.put(0xc8, "11001000");
        map.put(0xc9, "11001001");
        map.put(0xca, "11001010");
        map.put(0xcb, "11001011");
        map.put(0xcc, "11001100");
        map.put(0xcd, "11001101");
        map.put(0xce, "11001110");
        map.put(0xcf, "11001111");
        map.put(0xd0, "11010000");
        map.put(0xd1, "11010001");
        map.put(0xd2, "11010010");
        map.put(0xd3, "11010011");
        map.put(0xd4, "11010100");
        map.put(0xd5, "11010101");
        map.put(0xd6, "11010110");
        map.put(0xd7, "11010111");
        map.put(0xd8, "11011000");
        map.put(0xd9, "11011001");
        map.put(0xda, "11011010");
        map.put(0xdb, "11011011");
        map.put(0xdc, "11011100");
        map.put(0xdd, "11011101");
        map.put(0xde, "11011110");
        map.put(0xdf, "11011111");
        map.put(0xe0, "11100000");
        map.put(0xe1, "11100001");
        map.put(0xe2, "11100010");
        map.put(0xe3, "11100011");
        map.put(0xe4, "11100100");
        map.put(0xe5, "11100101");
        map.put(0xe6, "11100110");
        map.put(0xe7, "11100111");
        map.put(0xe8, "11101000");
        map.put(0xe9, "11101001");
        map.put(0xea, "11101010");
        map.put(0xeb, "11101011");
        map.put(0xec, "11101100");
        map.put(0xed, "11101101");
        map.put(0xee, "11101110");
        map.put(0xef, "11101111");
        map.put(0xf0, "11110000");
        map.put(0xf1, "11110001");
        map.put(0xf2, "11110010");
        map.put(0xf3, "11110011");
        map.put(0xf4, "11110100");
        map.put(0xf5, "11110101");
        map.put(0xf6, "11110110");
        map.put(0xf7, "11110111");
        map.put(0xf8, "11111000");
        map.put(0xf9, "11111001");
        map.put(0xfa, "11111010");
        map.put(0xfb, "11111011");
        map.put(0xfc, "11111100");
        map.put(0xfd, "11111101");
        map.put(0xfe, "11111110");
        map.put(0xff, "11111111");
        BYTE_TO_STRING = Collections.unmodifiableMap(map);
    }

    public static String get(int _byte) {
        return BYTE_TO_STRING.get(_byte);
    }

    public static int get(String string) {
        if (string == null) {
            throw new IllegalArgumentException();
        }
        return STRING_TO_BYTE.get(string);
    }

}
